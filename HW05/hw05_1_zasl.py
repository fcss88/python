# input numers
a = input("Введіть a: ")
try:
    a = int(a)
    if a <= 0:
        print("a менше-рівне нуля, не підходе нам таке")
        exit()
    else:
        print("ви ввели ціле число")

except ValueError:
    print("число не ціле, допобачення")
    exit()
"""
У бітовому контексті, оператор & виконує побітову кон'юнкцію (логічне "І") між двома числами. Коли використовується з двійковими числами, він виконує побітову операцію "І" між відповідними парами бітів.
Операція (a & (a - 1)) видаляє найменший встановлений біт у числі a. Це досягається шляхом використання виразу (a - 1), який встановлює всі біти, починаючи з найменш значущого біта, до значення протилежного найменш значущому біту числа a. Потім виконується побітова операція "І" між a і (a - 1), що забирає встановлений біт.
Якщо результат (a & (a - 1)) дорівнює 0, це означає, що у числі a був лише один встановлений біт, оскільки побітова операція "І" не змінила жодного біта. Це означає, що число є степенем двійки, оскільки у двійковому представленні степені двійки мають лише один встановлений біт.
Загалом, вираз (a & (a - 1)) == 0 перевіряє, чи має число a лише один встановлений біт, що є характеристикою степеня двійки.
Наприклад, для числа 8 у двійковому представленні 1000, побітова операція (8 & (8 - 1)) дорівнює 0, тому вираз (a & (a - 1)) == 0 поверне True, і ми можемо вважати, що число 8 є степенем двійки.
Для числа 10 у двійковому представленні 1010, побітова операція (10 & (10 - 1)) дорівнює 8, що не є рівним 0, тому вираз (a & (a - 1)) == 0 поверне False, і ми можемо вважати, що число 10 не є степенем двійки.
"""
checker = (a & (a - 1)) == 0

if checker:
    print("число є степенем двійки")
else:
    print("число не є степінем двійки")
